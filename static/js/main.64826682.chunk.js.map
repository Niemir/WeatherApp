{"version":3,"sources":["img/sunny.png","img/rain2.png","img/cloudy.png","components/Form.js","components/Reasult.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","react_default","a","createElement","className","active","onSubmit","submit","type","input","onChange","change","placeholder","Reasult","_props$state","state","err","temp","weather","city","time","description","icon","firstHour","firstTemp","secondHour","secondTemp","thirdHour","thirdTemp","fourthHour","fourthTemp","fifthHour","fifthTemp","sunnyStyle","backgroundImage","concat","Sunny","rainStyle","Rain","cloudStyle","Cloud","Fragment","Math","floor","style","Date","hours","getHours","minutes","getMinutes","App","handleInputChange","e","_this","setState","target","value","handleFindCity","preventDefault","API","API3h","fetch","then","response","ok","Error","json","date","main","catch","alert","result","console","log","list","dt_txt","slice","this","components_Form","components_Reasult","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64826682.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.d94d0f87.png\";","module.exports = __webpack_public_path__ + \"static/media/rain2.b2ebe4ce.png\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.b168e3b6.png\";","import React from 'react'\r\n\r\n\r\nconst Form = props => {\r\n\r\n  return (\r\n    <form className={props.active ? 'active' : null} onSubmit={props.submit}>\r\n      <input\r\n        className=\"input-city\"\r\n        type=\"text\"\r\n        input={props.input}\r\n        onChange={props.change}\r\n        placeholder='Wpisz miasto'\r\n      />\r\n      <button ><i className=\"fas fa-search-location\"></i></button>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Sunny from '../img/sunny.png'\r\nimport Rain from '../img/rain2.png'\r\nimport Cloud from '../img/cloudy.png'\r\n\r\nconst Reasult = props => {\r\n  const {\r\n    err,\r\n    temp,\r\n    city,\r\n    time,\r\n    weather,\r\n    icon,\r\n    description,\r\n    firstHour,\r\n    firstTemp,\r\n    secondHour,\r\n    secondTemp,\r\n    thirdHour,\r\n    thirdTemp,\r\n    fourthHour,\r\n    fourthTemp,\r\n    fifthHour,\r\n    fifthTemp,\r\n\r\n  } = props.state\r\n  const sunnyStyle = {\r\n    backgroundImage: `url(${Sunny})`,\r\n  }\r\n  const rainStyle = {\r\n    backgroundImage: `url(${Rain})`,\r\n  }\r\n  const cloudStyle = {\r\n    backgroundImage: `url(${Cloud})`,\r\n  }\r\n  const whichWeather = () => {\r\n    if (weather === 'Cloudy') return cloudStyle\r\n    else if (weather === 'Rain') return rainStyle\r\n    else if (weather === 'Clear') return sunnyStyle\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {err ? null : (\r\n\r\n        <div className='reasult'>\r\n\r\n          {/* <h3>{city} </h3> */}\r\n          <p className='temp-p'>{\r\n            Math.floor(temp)}&ordm;</p>\r\n          <p className='discription-p'>{description}</p>\r\n          {/* <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" /> */}\r\n\r\n          <div className=\"actual-weather\" style={whichWeather()} >\r\n          </div>\r\n          <div className=\"future-weather\">\r\n            <div className=\"first-weather\">\r\n              <div className=\"hour\">\r\n                {firstHour}\r\n              </div>\r\n              <div className=\"temp\">\r\n                {firstTemp}<span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"second-weather\">\r\n              <div className=\"hour\">\r\n                {secondHour}\r\n              </div>\r\n              <div className=\"temp\">\r\n                {secondTemp}<span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"third-weather\">\r\n              <div className=\"hour\">\r\n                {thirdHour}\r\n              </div>\r\n              <div className=\"temp\">\r\n                {thirdTemp}<span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"fourth-weather\">\r\n              <div className=\"hour\">\r\n                {fourthHour}\r\n              </div>\r\n              <div className=\"temp\">\r\n                {fourthTemp}<span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"fifth-weather\">\r\n              <div className=\"hour\">\r\n                {fifthHour}\r\n              </div>\r\n              <div className=\"temp\">\r\n                {fifthTemp}<span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Reasult;","import React, { Component } from \"react\";\nimport '../styles/App.css';\nimport Form from './Form.js'\nimport Reasult from './Reasult.js'\n\n\nconst time = new Date();\nconst hours = time.getHours();\nconst minutes = time.getMinutes()\n\nclass App extends Component {\n  state = {\n    input: '',\n    temp: '',\n    err: true,\n    city: '',\n    time: '',\n    weather: '',\n    description: '',\n    icon: '',\n    active: false,\n    firstHour: '',\n    firstTemp: '',\n    secondHour: '',\n    secondTemp: '',\n    thirdHour: '',\n    thirdTemp: '',\n    fourthHour: '',\n    fourthTemp: '',\n    fifthHour: '',\n    fifthTemp: '',\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n  handleFindCity = (e) => {\n    e.preventDefault();\n\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.input}&APPID=efe58d1c57284f800ce9c6fcec9ddfe0&units=metric&lang=pl`\n\n    const API3h = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.input}&APPID=efe58d1c57284f800ce9c6fcec9ddfe0&units=metric`\n\n\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error('nie ma takiego miasta')\n      })\n      .then(response => response.json())\n      .then(date => {\n        this.setState(\n          {\n            err: false,\n            temp: date.main.temp,\n            city: this.state.input,\n            time: `${hours}:${minutes}`,\n            weather: date.weather[0].main,\n            description: date.weather[0].description,\n            icon: date.weather[0].icon,\n            active: true\n          }\n        )\n      })\n      .catch(err => {\n        alert(`Nie znaleziono miasta ${this.state.input}`)\n        this.setState({ err: true });\n      })\n\n    fetch(API3h)\n      .then(result => {\n        if (result.ok) {\n          return result\n        }\n        throw Error('nie ma takiego miasta')\n      })\n      .then(result => result.json())\n      .then(date => {\n        console.log(date)\n        this.setState({\n          firstHour: date.list[0].dt_txt.slice(10, 16),\n          firstTemp: Math.floor(date.list[0].main.temp),\n          secondHour: date.list[1].dt_txt.slice(10, 16),\n          secondTemp: Math.floor(date.list[1].main.temp),\n          thirdHour: date.list[2].dt_txt.slice(10, 16),\n          thirdTemp: Math.floor(date.list[2].main.temp),\n          fourthHour: date.list[3].dt_txt.slice(10, 16),\n          fourthTemp: Math.floor(date.list[3].main.temp),\n          fifthHour: date.list[4].dt_txt.slice(10, 16),\n          fifthTemp: Math.floor(date.list[4].main.temp),\n        });\n      })\n      .catch(err => {\n        this.setState({ err: true });\n      })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={this.state.active ? 'logo active' : 'logo'}>\n          <h1>WeatherApp</h1>\n        </div>\n        <div className=\"background\"></div>\n        <Form\n          input={this.state.input}\n          change={this.handleInputChange}\n          submit={this.handleFindCity}\n          active={this.state.active}\n        ></Form>\n        <Reasult state={this.state}></Reasult>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}